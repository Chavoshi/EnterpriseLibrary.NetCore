<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmptyParameterName" xml:space="preserve">
    <value>Parameter name cannot be null or an empty string.</value>
  </data>
  <data name="ExceptionRangeAbsoluteTime" xml:space="preserve">
    <value>Absolute time cannot be less than current time.</value>
  </data>
  <data name="ExceptionNullTimeFormat" xml:space="preserve">
    <value>Time format cannot be null.</value>
  </data>
  <data name="ExceptionInvalidExtendedFormatArguments" xml:space="preserve">
    <value>The format length is invalid.</value>
  </data>
  <data name="ExceptionRangeMinute" xml:space="preserve">
    <value>Minutes in Extended Format out of range.</value>
  </data>
  <data name="ExceptionRangeMonth" xml:space="preserve">
    <value>Month of Year in Extended Format out of range.</value>
  </data>
  <data name="ExceptionRangeDay" xml:space="preserve">
    <value>Day of Week in Extended Format out of range.</value>
  </data>
  <data name="ExceptionRangeHour" xml:space="preserve">
    <value>Hour in Extended Format out of range.</value>
  </data>
  <data name="ExceptionNullFileName" xml:space="preserve">
    <value>The file name cannot be null.</value>
  </data>
  <data name="ExceptionInvalidFileName" xml:space="preserve">
    <value>The file does not exist.</value>
  </data>
  <data name="ExceptionRangeSlidingExpiration" xml:space="preserve">
    <value>Sliding time should be greater than or equal to 1s.</value>
  </data>
  <data name="CacheNotInitializedException" xml:space="preserve">
    <value>Add called without setting BackgroundScheduler.</value>
  </data>
  <data name="InvalidExpirationPollFrequencyInMilliSeconds" xml:space="preserve">
    <value>Expiration poll frequency time must be at least 1 millisecond.</value>
  </data>
  <data name="InvalidPollingStopOperation" xml:space="preserve">
    <value>Cannot stop polling before it is started.</value>
  </data>
  <data name="ExceptionStorageAreaNullOrEmpty" xml:space="preserve">
    <value>The storage are name for the Isolated Storage Backing Store can not be null or an empty string.</value>
  </data>
  <data name="FailureToRemoveCacheItemInBackground" xml:space="preserve">
    <value>Failure while removing item from cache in background.</value>
  </data>
  <data name="BackgroundSchedulerProducerConsumerQueueFailure" xml:space="preserve">
    <value>Internal ProducerConsumerQueue thread failed.</value>
  </data>
  <data name="FailureToSpawnUserSpecifiedRefreshAction" xml:space="preserve">
    <value>Failure while starting application-specified refresh action.</value>
  </data>
  <data name="BlockName" xml:space="preserve">
    <value>Enterprise Library Caching Application Block</value>
  </data>
  <data name="ErrorCacheCallbackFailedMessage" xml:space="preserve">
    <value>The error occurred executing the removal callback for key "{1}" in the the "{0}" instance.</value>
  </data>
  <data name="ErrorCacheConfigurationFailedMessage" xml:space="preserve">
    <value>The error occurred retrieving the configuration for instance "{0}".</value>
  </data>
  <data name="ErrorCacheOperationFailedMessage" xml:space="preserve">
    <value>The error occurred using the "{0}" instance.</value>
  </data>
  <data name="CacheAccessAttemptsCounterHelpResource" xml:space="preserve">
    <value>Total # of Cache Access Attempts is the number of reads from the cache.</value>
  </data>
  <data name="CacheAccessedExpiredItemsRatioBaseCounterHelpResource" xml:space="preserve">
    <value>Cache Accessed Expired Items Ratio Base is the total number of items expired from the cache.</value>
  </data>
  <data name="CacheAccessedExpiredItemsRatioCounterHelpResource" xml:space="preserve">
    <value>Cache Accessed Expired Items Ratio is the ratio between expired items accessed by the user and total items expired from the cache.</value>
  </data>
  <data name="CacheAccessedScavengedItemsRatioBaseCounterHelpResource" xml:space="preserve">
    <value>Cache Accessed Scavenged Items Ratio Base is the total number of items scavenged from the cache.</value>
  </data>
  <data name="CacheAccessedScavengedItemsRatioCounterHelpResource" xml:space="preserve">
    <value>Cache Accessed Scavenged Items Ratio is the ratio between scavenged items accessed by the user and total items scavenged from the cache.</value>
  </data>
  <data name="CacheExpiriesPerSecCounterHelpResource" xml:space="preserve">
    <value>Cache Expiries/sec is the rate at which items were expired from the cache.</value>
  </data>
  <data name="CacheHitRatioCounterHelpResource" xml:space="preserve">
    <value>Cache Hit Ratio is the ratio between hits and reads from the cache.</value>
  </data>
  <data name="CacheHitsPerSecCounterHelpResource" xml:space="preserve">
    <value>Cache Hits/sec is the rate at which requests for existing items were received by the cache.</value>
  </data>
  <data name="CacheMissesPerSecCounterHelpResource" xml:space="preserve">
    <value>Cache Misses/sec is the rate at which requests for non existing items were received by the cache.</value>
  </data>
  <data name="CacheScavengedItemsPerSecCounterHelpResource" xml:space="preserve">
    <value>Cache Scavenged Items/sec is the rate at which items were scavenged from the cache.</value>
  </data>
  <data name="CacheTotalEntriesCounterHelpResource" xml:space="preserve">
    <value>Total Cache Entries is the total number of entries in the cache.</value>
  </data>
  <data name="CacheUpdatedEntriesPerSecHelpResource" xml:space="preserve">
    <value>Updated Entries/sec is the rate at which items were updated in the cache. An update can be either an "add" or a "remove".</value>
  </data>
  <data name="TotalCacheExpiriesCounterHelpResource" xml:space="preserve">
    <value>Total Cache Expiries is the total number of items expired from the cache.</value>
  </data>
  <data name="TotalCacheHitsCounterHelpResource" xml:space="preserve">
    <value>Total Cache Hits is the total number of requests for existing items received by the cache.</value>
  </data>
  <data name="TotalCacheMissesCounterHelpResource" xml:space="preserve">
    <value>Total Cache Misses is the total number for non existing items received by the cache.</value>
  </data>
  <data name="TotalCacheScavengedItemsCounterHelpResource" xml:space="preserve">
    <value>Total Cache Scavenged Items is the total number of items scavenged from the cache.</value>
  </data>
  <data name="TotalCacheUpdatedEntriesHelpResource" xml:space="preserve">
    <value>Total Updated Entries is the total number of items updated in the cache. An update can be either an "add" or a "remove".</value>
  </data>
  <data name="ExceptionMethodMustBeImplementedBySubclasses" xml:space="preserve">
    <value>Must be implemented by subclasses.</value>
  </data>
  <data name="ExceptionTypeForCustomCacheManagerMustDeriveFrom" xml:space="preserve">
    <value>The Custom Cache Manager '{0}' with Type '{1}' must derive from ICacheManager.</value>
  </data>
  <data name="ExceptionTypeForCustomBackingStoreMustDeriveFrom" xml:space="preserve">
    <value>The Custom Backing Store '{0}' with Type '{1}' must derive from IBackingStore.</value>
  </data>
  <data name="ExceptionBackingStoresWithNonDefaultConstructorsShouldOverrideGetRegistrations" xml:space="preserve">
    <value>Backing Stores with non-default constructors should override GetRegistrations().</value>
  </data>
  <data name="ExceptionParameterMustImplement" xml:space="preserve">
    <value>Parameter must implement type '{0}'.</value>
  </data>
</root>