<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyName>Microsoft.Practices.EnterpriseLibrary.PolicyInjection</AssemblyName>
    <RootNamespace>Microsoft.Practices.EnterpriseLibrary.PolicyInjection</RootNamespace>

    <PackageId>EnterpriseLibrary.PolicyInjection.NetCore</PackageId>
    <Title>Enterprise Library - Policy Injection Application Block for for .Net Core &amp; .Net Standard</Title>
    <PackageVersion>6.0.1311</PackageVersion>
    <Authors>Mohammad Chavoshi</Authors>
    <Description>The Enterprise Library Policy Injection Application Block can be used to change the behavior of any .NET objects, in order to better manage crosscutting concerns for these objects. The policy injection is implemented through the Unity interception mechanism. The package includes call handlers for Logging, Validation and Exception Handling. This library contains a class library that targets .Net Core 2.0 &amp; .Net Standard 2.0.</Description>
    <PackageTags>entlib entlib6 Enterprise Library PIAB policy injection interception aop aspect cross cutting LOB NetCore NetStandard</PackageTags>
    <PackageIconUrl>https://nuget.org/Media/Default/Packages/Unity/2.0/entlib_new_icon_100x100.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/Chavoshi/EnterpriseLibrary.NetCore</PackageProjectUrl>
    <PackageLicenseUrl>http://opensource.org/licenses/Apache-2.0</PackageLicenseUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Version>6.0.1311</Version>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <FileVersion>6.0.1311.0</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\Release\netstandard2.0\Microsoft.Practices.EnterpriseLibrary.PolicyInjection.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\Debug\netstandard2.0\Microsoft.Practices.EnterpriseLibrary.PolicyInjection.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.4.0" />
    <PackageReference Include="Unity.Interception.NetCore" Version="4.0.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Core\Common\Common.csproj" />
    <ProjectReference Include="..\..\Exception Handling Application Block\ExceptionHandling\ExceptionHandling.csproj" />
    <ProjectReference Include="..\..\Logging Application Block\Logging\Logging.csproj" />
    <ProjectReference Include="..\..\Validation Application Block\Validation\Validation.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Configuration\DesignResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>DesignResources.resx</DependentUpon>
    </Compile>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Configuration\DesignResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>DesignResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="xcopy &quot;$(OutDir)*.*&quot; &quot;$(SolutionDir)..\Build\$(ConfigurationName)\&quot; /s /i /y /d" />
  </Target>

</Project>
