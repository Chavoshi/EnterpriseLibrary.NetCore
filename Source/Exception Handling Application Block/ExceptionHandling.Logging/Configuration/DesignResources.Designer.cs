//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.EnterpriseLibrary.Logging.Configuration {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DesignResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DesignResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.DesignResources", typeof(DesignResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs details of the exception sent to the block by using the Logging Application Block. 
        ///Adding this Exception Handler automatically adds the Logging Application Block with the default settings..
        /// </summary>
        internal static string LoggingExceptionHandlerDataDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging Exception Handler.
        /// </summary>
        internal static string LoggingExceptionHandlerDataDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Event ID for the logged exception..
        /// </summary>
        internal static string LoggingExceptionHandlerDataEventIdDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataEventIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event ID.
        /// </summary>
        internal static string LoggingExceptionHandlerDataEventIdDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataEventIdDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Formatter to use when logging the exception..
        /// </summary>
        internal static string LoggingExceptionHandlerDataFormatterTypeNameDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataFormatterTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatter Type.
        /// </summary>
        internal static string LoggingExceptionHandlerDataFormatterTypeNameDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataFormatterTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Logging Category to use when logging exceptions, as configured in the settings of the Logging Application Block..
        /// </summary>
        internal static string LoggingExceptionHandlerDataLogCategoryDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataLogCategoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging Category.
        /// </summary>
        internal static string LoggingExceptionHandlerDataLogCategoryDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataLogCategoryDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Logging Exception Handler..
        /// </summary>
        internal static string LoggingExceptionHandlerDataNameDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string LoggingExceptionHandlerDataNameDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The priority of the logged exception message. 
        ///Messages with a priority below the minimum specified in a Priority Filter in the Logging Application Block are not logged..
        /// </summary>
        internal static string LoggingExceptionHandlerDataPriorityDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataPriorityDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Priority.
        /// </summary>
        internal static string LoggingExceptionHandlerDataPriorityDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataPriorityDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The severity value of the logged exception. .
        /// </summary>
        internal static string LoggingExceptionHandlerDataSeverityDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataSeverityDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Severity.
        /// </summary>
        internal static string LoggingExceptionHandlerDataSeverityDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataSeverityDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The title for the logged exception. .
        /// </summary>
        internal static string LoggingExceptionHandlerDataTitleDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataTitleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        internal static string LoggingExceptionHandlerDataTitleDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataTitleDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Logging Exception Handler..
        /// </summary>
        internal static string LoggingExceptionHandlerDataTypeNameDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string LoggingExceptionHandlerDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obsolete. The Exception Handler will always use the default LogWriter to write the exception message..
        /// </summary>
        internal static string LoggingExceptionHandlerDataUseDefaultLoggerDescription {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataUseDefaultLoggerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Default Logger.
        /// </summary>
        internal static string LoggingExceptionHandlerDataUseDefaultLoggerDisplayName {
            get {
                return ResourceManager.GetString("LoggingExceptionHandlerDataUseDefaultLoggerDisplayName", resourceCulture);
            }
        }
    }
}
