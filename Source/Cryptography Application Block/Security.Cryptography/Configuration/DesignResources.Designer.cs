//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DesignResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DesignResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignR" +
                            "esources", typeof(DesignResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Cryptography Settings.
        /// </summary>
        internal static string AddCryptographySettings {
            get {
                return ResourceManager.GetString("AddCryptographySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Hash Provider to use when code does specify the name of a configured Hash Provider..
        /// </summary>
        internal static string CryptographySettingsDefaultHashProviderNameDescription {
            get {
                return ResourceManager.GetString("CryptographySettingsDefaultHashProviderNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Hash Provider.
        /// </summary>
        internal static string CryptographySettingsDefaultHashProviderNameDisplayName {
            get {
                return ResourceManager.GetString("CryptographySettingsDefaultHashProviderNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Symmetric Cryptography Provider to use when code does specify 
        ///the name of a configured Symmetric Cryptography Provider..
        /// </summary>
        internal static string CryptographySettingsDefaultSymmetricCryptoProviderNameDescription {
            get {
                return ResourceManager.GetString("CryptographySettingsDefaultSymmetricCryptoProviderNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Symmetric Crypto Provider.
        /// </summary>
        internal static string CryptographySettingsDefaultSymmetricCryptoProviderNameDisplayName {
            get {
                return ResourceManager.GetString("CryptographySettingsDefaultSymmetricCryptoProviderNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration settings for the Cryptography Application Block..
        /// </summary>
        internal static string CryptographySettingsDescription {
            get {
                return ResourceManager.GetString("CryptographySettingsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cryptography Settings.
        /// </summary>
        internal static string CryptographySettingsDisplayName {
            get {
                return ResourceManager.GetString("CryptographySettingsDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of configured Hash Providers for the Cryptography Application Block..
        /// </summary>
        internal static string CryptographySettingsHashProvidersDescription {
            get {
                return ResourceManager.GetString("CryptographySettingsHashProvidersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash Providers.
        /// </summary>
        internal static string CryptographySettingsHashProvidersDisplayName {
            get {
                return ResourceManager.GetString("CryptographySettingsHashProvidersDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of configured Symmetric Cryptography Providers for the Cryptography Application Block..
        /// </summary>
        internal static string CryptographySettingsSymmetricCryptoProvidersDescription {
            get {
                return ResourceManager.GetString("CryptographySettingsSymmetricCryptoProvidersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symmetric Cryptography Providers.
        /// </summary>
        internal static string CryptographySettingsSymmetricCryptoProvidersDisplayName {
            get {
                return ResourceManager.GetString("CryptographySettingsSymmetricCryptoProvidersDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Hash Provider (using type picker).
        /// </summary>
        internal static string CustomHashProviderDataAddCommand {
            get {
                return ResourceManager.GetString("CustomHashProviderDataAddCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Hash Provider implemented as a custom class, and added to Enterprise Library..
        /// </summary>
        internal static string CustomHashProviderDataDescription {
            get {
                return ResourceManager.GetString("CustomHashProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Hash Provider.
        /// </summary>
        internal static string CustomHashProviderDataDisplayName {
            get {
                return ResourceManager.GetString("CustomHashProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Custom Hash Provider..
        /// </summary>
        internal static string CustomHashProviderDataNameDescription {
            get {
                return ResourceManager.GetString("CustomHashProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string CustomHashProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("CustomHashProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Custom Hash Provider..
        /// </summary>
        internal static string CustomHashProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("CustomHashProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string CustomHashProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("CustomHashProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Symmetric Crypto Provider (using type picker).
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataAddCommand {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataAddCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of a class that derives from SymmetricAlgorithm and implements 
        ///the cryptography algorithm for this provider..
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataAlgorithmTypeNameDescription {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataAlgorithmTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm Type.
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataAlgorithmTypeNameDisplayName {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataAlgorithmTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Symmetric Cryptography Provider implemented as a custom class, and added to Enterprise Library..
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataDescription {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Symmetric Crypto Provider.
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataDisplayName {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Custom Symmetric Crypto Provider..
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataNameDescription {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The absolute path and the file name of the file that contains the encrypted key. 
        ///This value is not required for DPAPI symmetric providers..
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataProtectedKeyFilenameDescription {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataProtectedKeyFilenameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key File Path and Name.
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataProtectedKeyFilenameDisplayName {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataProtectedKeyFilenameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether the machine store or the user store is used for storing secrets. 
        ///Possible values are CurrentUser and LocalMachine. This value is not required for DPAPI symmetric providers..
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataProtectedKeyProtectionScopeDescription {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataProtectedKeyProtectionScopeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Protection Scope.
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataProtectedKeyProtectionScopeDisplayName {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataProtectedKeyProtectionScopeDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Custom Symmetric Crypto Provider..
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string CustomSymmetricCryptoProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("CustomSymmetricCryptoProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Symmetric Cryptography Provider that uses Data Protection API to encrypt and decrypt secrets..
        /// </summary>
        internal static string DpapiSymmetricCryptoProviderDataDescription {
            get {
                return ResourceManager.GetString("DpapiSymmetricCryptoProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DPAPI Symmetric Crypto Provider.
        /// </summary>
        internal static string DpapiSymmetricCryptoProviderDataDisplayName {
            get {
                return ResourceManager.GetString("DpapiSymmetricCryptoProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the DPAPI Symmetric Crypto Provider..
        /// </summary>
        internal static string DpapiSymmetricCryptoProviderDataNameDescription {
            get {
                return ResourceManager.GetString("DpapiSymmetricCryptoProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string DpapiSymmetricCryptoProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("DpapiSymmetricCryptoProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scope for which the key is valid. 
        ///CurrentUser means that the provider will use the current user&apos;s profile to generate the key, and only that user can decrypt secrets.
        ///LocalMachine means that any code running on the machine has access to the protected key, and can decrypt any secret encrypted in LocalMachine mode..
        /// </summary>
        internal static string DpapiSymmetricCryptoProviderDataScopeDescription {
            get {
                return ResourceManager.GetString("DpapiSymmetricCryptoProviderDataScopeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection Scope.
        /// </summary>
        internal static string DpapiSymmetricCryptoProviderDataScopeDisplayName {
            get {
                return ResourceManager.GetString("DpapiSymmetricCryptoProviderDataScopeDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the DPAPI Symmetric Crypto Provider.
        /// </summary>
        internal static string DpapiSymmetricCryptoProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("DpapiSymmetricCryptoProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string DpapiSymmetricCryptoProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("DpapiSymmetricCryptoProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Key ....
        /// </summary>
        internal static string ExportCyrptographyKeyCommandTitle {
            get {
                return ResourceManager.GetString("ExportCyrptographyKeyCommandTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of a class that derives from HashAlgorithm and implements the hashing algorithm for this provider..
        /// </summary>
        internal static string HashAlgorithmProviderDataAlgorithmTypeNameDescription {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataAlgorithmTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm Type.
        /// </summary>
        internal static string HashAlgorithmProviderDataAlgorithmTypeNameDisplayName {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataAlgorithmTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A hash algorithm provider that uses .NET hash algorithms that do not require a generated key..
        /// </summary>
        internal static string HashAlgorithmProviderDataDescription {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash Algorithm Provider.
        /// </summary>
        internal static string HashAlgorithmProviderDataDisplayName {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Hash Algorithm Provider..
        /// </summary>
        internal static string HashAlgorithmProviderDataNameDescription {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string HashAlgorithmProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines if a random string (a salt value) is generated and pre-pended to the plaintext before hashing. 
        ///Using salt helps to guard against dictionary attacks, which take longer because every entry in the dictionary 
        ///must be hashed with every possible salt value..
        /// </summary>
        internal static string HashAlgorithmProviderDataSaltEnabledDescription {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataSaltEnabledDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Salt Enabled.
        /// </summary>
        internal static string HashAlgorithmProviderDataSaltEnabledDisplayName {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataSaltEnabledDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Hash Algorithm Provider..
        /// </summary>
        internal static string HashAlgorithmProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string HashAlgorithmProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("HashAlgorithmProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base class for all hash providers..
        /// </summary>
        internal static string HashProviderDataDescription {
            get {
                return ResourceManager.GetString("HashProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash Provider.
        /// </summary>
        internal static string HashProviderDataDisplayName {
            get {
                return ResourceManager.GetString("HashProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Hash Provider..
        /// </summary>
        internal static string HashProviderDataNameDescription {
            get {
                return ResourceManager.GetString("HashProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string HashProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("HashProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Hash Provider..
        /// </summary>
        internal static string HashProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("HashProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string HashProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("HashProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of a class that derives from HashAlgorithm and implements the hashing algorithm for this provider..
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataAlgorithmTypeNameDescription {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataAlgorithmTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm Type.
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataAlgorithmTypeNameDisplayName {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataAlgorithmTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A hash algorithm provider that uses .NET hash algorithms that require a generated key..
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataDescription {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyed Hash Algorithm Provider.
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataDisplayName {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Keyed Hash Algorithm Provider..
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataNameDescription {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The absolute path and the file name of the file that contains the encrypted key. 
        ///This value is required for keyed hash algorithms..
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataProtectedKeyFilenameDescription {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataProtectedKeyFilenameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key File Path and Name.
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataProtectedKeyFilenameDisplayName {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataProtectedKeyFilenameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether the machine store or the user store is used for storing secrets. 
        ///Possible values are CurrentUser and LocalMachine. This value is required for keyed hash algorithms..
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataProtectedKeyProtectionScopeDescription {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataProtectedKeyProtectionScopeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Protection Scope.
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataProtectedKeyProtectionScopeDisplayName {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataProtectedKeyProtectionScopeDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines if a random string (a salt value) is generated and pre-pended to the plaintext before hashing. 
        ///Using salt helps to guard against dictionary attacks, which take longer because every entry in the dictionary 
        ///must be hashed with every possible salt value..
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataSaltEnabledDescription {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataSaltEnabledDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Salt Enabled.
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataSaltEnabledDisplayName {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataSaltEnabledDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Keyed Hash Algorithm Provider..
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string KeyedHashAlgorithmProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("KeyedHashAlgorithmProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of a class that derives from SymmetricAlgorithm and implements the cryptography algorithm for this provider..
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataAlgorithmTypeNameDescription {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataAlgorithmTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm Type.
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataAlgorithmTypeNameDisplayName {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataAlgorithmTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A symmetric cryptography algorithm provider that uses .NET symmetric algorithms..
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataDescription {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symmetric Algorithm Provider.
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataDisplayName {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Symmetric Algorithm Provider..
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataNameDescription {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The absolute path and the file name of the file that contains the encrypted key. 
        ///This value is not required for DPAPI symmetric providers..
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataProtectedKeyFilenameDescription {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataProtectedKeyFilenameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key File Path and Name.
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataProtectedKeyFilenameDisplayName {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataProtectedKeyFilenameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies whether the machine store or the user store is used for storing secrets. 
        ///Possible values are CurrentUser and LocalMachine. 
        ///This value is not required for DPAPI symmetric providers..
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataProtectedKeyProtectionScopeDescription {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataProtectedKeyProtectionScopeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Protection Scope.
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataProtectedKeyProtectionScopeDisplayName {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataProtectedKeyProtectionScopeDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Symmetric Algorithm Provider..
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string SymmetricAlgorithmProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("SymmetricAlgorithmProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base class for all symmetric cryptography providers..
        /// </summary>
        internal static string SymmetricProviderDataDescription {
            get {
                return ResourceManager.GetString("SymmetricProviderDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symmetric Provider.
        /// </summary>
        internal static string SymmetricProviderDataDisplayName {
            get {
                return ResourceManager.GetString("SymmetricProviderDataDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Symmetric Provider..
        /// </summary>
        internal static string SymmetricProviderDataNameDescription {
            get {
                return ResourceManager.GetString("SymmetricProviderDataNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string SymmetricProviderDataNameDisplayName {
            get {
                return ResourceManager.GetString("SymmetricProviderDataNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified type name of the Symmetric Provider..
        /// </summary>
        internal static string SymmetricProviderDataTypeNameDescription {
            get {
                return ResourceManager.GetString("SymmetricProviderDataTypeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string SymmetricProviderDataTypeNameDisplayName {
            get {
                return ResourceManager.GetString("SymmetricProviderDataTypeNameDisplayName", resourceCulture);
            }
        }
    }
}
